# Copyright 2021 VMware
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: carto.run/v1alpha1
kind: ClusterSourceTemplate
metadata:
  name: git-template---templates-refer-to-owner
spec:
  urlPath: .data.workload_git_url
  revisionPath: .data.workload_git_ref_branch
  template:
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: test-configmap-source
    data:
      workload_git_url: $(owner.spec.source.git.url)$
      workload_name: $(owner.metadata.name)$
      workload_git_ref_branch: $(owner.spec.source.git.ref.branch)$
      workload_services_first_kind: $(owner.spec.serviceClaims[0].ref.kind)$
      workload_env: $(owner.spec.env[?(@.name=="SPRING_PROFILES_ACTIVE")].value)$
      workload_build_env: $(owner.spec.build.env[?(@.name=="SOME_BUILD_ENV")].value)$
      workload_resources_requests_cpu: $(owner.spec.resources.requests.cpu)$

---
apiVersion: carto.run/v1alpha1
kind: ClusterSourceTemplate
metadata:
  name: deliverable-list---templates-refer-to-owner
spec:
  urlPath: .spec.value
  revisionPath: .metadata.name
  template:
    apiVersion: test.run/v1alpha1
    kind: Test
    metadata:
      name: test-deliverable-list
    spec:
      value:
        env: $(owner.spec.env)$

---
apiVersion: carto.run/v1alpha1
kind: ClusterSourceTemplate
metadata:
  name: deliverable-object---templates-refer-to-owner
spec:
  urlPath: .spec.value
  revisionPath: .metadata.name

  ytt: |
    #@ load("@ytt:data", "data")

    apiVersion: test.run/v1alpha1
    kind: Test
    metadata:
      name: test-deliverable-object
    spec:
      value:
        git: #@ data.values.owner.spec.source.git
